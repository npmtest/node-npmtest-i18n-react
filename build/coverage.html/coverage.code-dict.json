{"/home/travis/build/npmtest/node-npmtest-i18n-react/test.js":"/* istanbul instrument in package npmtest_i18n_react */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-i18n-react/lib.npmtest_i18n_react.js":"/* istanbul instrument in package npmtest_i18n_react */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_i18n_react = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_i18n_react = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-i18n-react/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-i18n-react && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_i18n_react */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_i18n_react\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_i18n_react.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_i18n_react.rollup.js'] =\n            local.assetsDict['/assets.npmtest_i18n_react.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_i18n_react.__dirname + '/lib.npmtest_i18n_react.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-i18n-react/node_modules/i18n-react/dist/i18n-react.js":"\"use strict\";\nvar React = require('react');\nvar _ = {\n    isString: function (s) { return typeof s === 'string' || s instanceof String; },\n    isObject: function (o) { return typeof o === 'object'; },\n    get: function (obj, path) {\n        var spath = path.split('.');\n        for (var i = 0, len = spath.length; i < len; i++) {\n            if (!obj || typeof obj !== 'object')\n                return undefined;\n            obj = obj[spath[i]];\n        }\n        return obj;\n    }\n};\nfunction Object_rest(obj, keys) {\n    var target = {};\n    for (var i in obj) {\n        if (keys.indexOf(i) >= 0)\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(obj, i))\n            continue;\n        target[i] = obj[i];\n    }\n    return target;\n}\n;\nfunction first(o) {\n    for (var k in o) {\n        if (k != '__')\n            return o[k];\n    }\n}\nfunction merge2(head, tail) {\n    if (head == null)\n        return tail;\n    if (tail == null)\n        return head;\n    if (_.isString(head) && _.isString(tail))\n        return head + tail;\n    return [head, tail];\n}\nfunction merge(head, middle, tail) {\n    if (head == null)\n        return merge2(middle, tail);\n    if (middle == null)\n        return merge2(head, tail);\n    if (tail == null)\n        return merge2(head, middle);\n    if (_.isString(head) && _.isString(middle) && _.isString(tail))\n        return head + middle + tail;\n    return [head, middle, tail];\n}\nvar maybeRegex = /[\\*_\\{\\[\\n]/;\nvar regexes = {\n    strong: /^(|.*?\\W)\\*(\\S.*?)\\*(|\\W.*)$/,\n    em: /^(|.*?\\W)_(\\S.*?)_(|\\W.*)$/,\n    p: /^(.*?)\\[(.*?)\\](.*)$/,\n    h1: /^(|.*?(?=\\n))\\n*\\s*#([^#].*?)#*\\s*\\n+([\\S\\s]*)$/,\n    h2: /^(|.*?(?=\\n))\\n*\\s*##([^#].*?)#*\\s*\\n+([\\S\\s]*)$/,\n    h3: /^(|.*?(?=\\n))\\n*\\s*###([^#].*?)#*\\s*\\n+([\\S\\s]*)$/,\n    h4: /^(|.*?(?=\\n))\\n*\\s*####([^#].*?)#*\\s*\\n+([\\S\\s]*)$/,\n    br: /^(.*?)[^\\S\\n]*\\n()[^\\S\\n]*([\\s\\S]*)$/,\n    self: /^(.*?)\\{\\{(.*?)\\}\\}(.*)$/,\n    inter: /^(.*?)\\{(.*?)\\}(.*)$/\n};\nvar matcher = (function () {\n    function matcher(inter, self) {\n        this.inter = inter;\n        this.self = self;\n    }\n    matcher.prototype.M = function (value) {\n        if (value == null || value == '')\n            return null;\n        if (!value.match(maybeRegex))\n            return value;\n        var res = null, type = null;\n        for (var rtype in regexes) {\n            if (!regexes.hasOwnProperty(rtype))\n                continue;\n            var rres = regexes[rtype].exec(value);\n            if (rres) {\n                if (res == null || rres[1].length < res[1].length) {\n                    res = rres;\n                    type = rtype;\n                }\n            }\n        }\n        if (!type)\n            return value;\n        var middle = null;\n        switch (type) {\n            case \"inter\":\n                middle = this.inter && this.inter(res[2]);\n                break;\n            case \"self\":\n                middle = this.self && this.self(res[2]);\n                break;\n            default:\n                middle = React.createElement(type, { key: type + res[2] }, this.M(res[2]));\n                break;\n        }\n        return merge(this.M(res[1]), middle, this.M(res[3]));\n    };\n    return matcher;\n}());\nfunction rangeHit(node, val) {\n    for (var t in node) {\n        if (!node.hasOwnProperty(t))\n            continue;\n        var range = t.match(/^(-?\\d+)\\.\\.(-?\\d+)$/);\n        if (range && (+range[1] <= val && val <= +range[2])) {\n            return node[t];\n        }\n    }\n}\nfunction resolveContextPath(node, p, path, context) {\n    var key = path[p];\n    var trans;\n    if (key != null && context[key] != null) {\n        trans = _.get(node, context[key].toString());\n        if (trans == null && (+context[key]) === context[key]) {\n            trans = rangeHit(node, +context[key]);\n        }\n    }\n    if (trans == null)\n        trans = node._;\n    if (trans == null)\n        trans = first(node);\n    if (trans != null && !_.isString(trans)) {\n        return resolveContextPath(trans, p + 1, path, context);\n    }\n    return trans;\n}\nfunction resolveContext(node, context) {\n    if (context == null) {\n        return resolveContextPath(node, 0, [], null);\n    }\n    else if (!_.isObject(context)) {\n        return resolveContextPath(node, 0, ['_'], { _: context });\n    }\n    else {\n        var ctx_keys = [];\n        if (node.__) {\n            ctx_keys = node.__.split('.');\n        }\n        else {\n            for (var k in context) {\n                if (!context.hasOwnProperty(k))\n                    continue;\n                ctx_keys.push(k);\n            }\n        }\n        return resolveContextPath(node, 0, ctx_keys, context);\n    }\n}\nvar MDText = (function () {\n    function MDText(texts) {\n        this.texts = texts;\n        this.p = this.factory('p');\n        this.span = this.factory('span');\n        this.li = this.factory('li');\n        this.div = this.factory('div');\n        this.button = this.factory('button');\n        this.a = this.factory('a');\n        this.text = this.factory(null);\n    }\n    MDText.prototype.setTexts = function (texts) {\n        this.texts = texts;\n    };\n    MDText.prototype.interpolate = function (exp, vars) {\n        var _a = exp.split(','), vn = _a[0], flags = _a[1];\n        var v = _.get(vars, vn);\n        if (v == null) {\n            return null;\n        }\n        else if (React.isValidElement(v)) {\n            return React.cloneElement(v, { key: 'r' });\n        }\n        var vs;\n        if (flags && flags.match(/l/)) {\n            vs = v.toLocaleString();\n        }\n        else {\n            vs = v.toString();\n        }\n        return vs;\n    };\n    MDText.prototype.format = function (value, vars) {\n        var _this = this;\n        return new matcher(function (exp) { return _this.interpolate(exp, vars); }, function (exp) { return _this.translate(exp, vars); }).M(value);\n    };\n    MDText.prototype.translate = function (key, options) {\n        if (key == null)\n            return null;\n        var trans = _.get(this.texts, key);\n        if (trans != null && !_.isString(trans)) {\n            trans = resolveContext(trans, options && options.context);\n        }\n        if (trans == null) {\n            return (options && options.notFound !== undefined) ? options.notFound :\n                this.notFound !== undefined ? this.notFound :\n                    key;\n        }\n        return this.format(trans, options);\n    };\n    MDText.prototype.factory = function (tag) {\n        var _this = this;\n        return function (props) {\n            var text = props.text;\n            var key;\n            var options;\n            var omitProps = ['text', 'tag'];\n            if (text == null || _.isString(text)) {\n                key = text;\n                options = props;\n                omitProps = ['text', 'context', 'tag', 'notFound'];\n            }\n            else {\n                key = text.key;\n                options = text;\n            }\n            return React.createElement(tag || options.tag || props.tag || 'span', Object_rest(props, omitProps), _this.translate(key, options));\n        };\n    };\n    return MDText;\n}());\nexports.MDText = MDText;\nvar singleton = new MDText(null);\nexports.__esModule = true;\nexports[\"default\"] = singleton;\n"}